name: CI
on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          #          - macos-13
          - ubuntu-22.04
        ghc:
          - 8.4.4
            #          - 8.6.5
            #          - 8.8.4
            #          - 8.10.7
            #          - 9.0.2
            #          - 9.2.6
            #          - 9.4.4
            #          - 9.6.1
            #          - 9.8.1
        bounds:
          - --prefer-oldest
          - ""
    env:
      CONFIG: --enable-tests --enable-benchmarks ${{ matrix.bounds }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - id: setup-haskell-cabal
        uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: 3.10.2.1
      - run: cabal install cabal-plan
      - run: cabal v2-freeze $CONFIG
      - run: cabal-plan
      - uses: actions/cache@v4
        with:
          path: |
            ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
      - run: cabal v2-build all $CONFIG
      - run: cabal v2-test all $CONFIG
      - run: cabal v2-haddock all
      - run: mv dist-newstyle/cache/plan.json plan-${{ runner.os }}-${{ matrix.ghc }}${{ matrix.bounds }}.json
      - name: Upload build plan as artifact
        uses: actions/upload-artifact@v4
        with:
          name: plan-${{ runner.os }}-${{ matrix.ghc }}${{ matrix.bounds }}
          path: plan-${{ runner.os }}-${{ matrix.ghc }}${{ matrix.bounds }}.json
  check-bounds:
    if: always()
    needs:
      - build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - id: setup-haskell-cabal
        uses: haskell-actions/setup@v2
        with:
          ghc-version: 9.6.3
          cabal-version: 3.10.2.1
      - run: |
          ## TODO: Remove the manual cloning once cabal-plan-bounds >0.1.5.1
          ##       is released. Currently, it’s needed because of
          ##       nomeata/cabal-plan-bounds#19.
          git clone https://github.com/nomeata/cabal-plan-bounds
          cd cabal-plan-bounds
          cabal install cabal-plan-bounds
      - name: download Cabal plans
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: plans
          pattern: plan-*
      - name: Cabal plans considered in generated bounds
        run: find plans/
      - name: check if bounds have changed
        run: |
          diffs="$(find . -name '*.cabal' -exec \
            cabal-plan-bounds \
              --dry-run \
               \
              plans/*.json \
              --cabal {} \;)"
          if [[ -n "$diffs" ]]; then
            echo "$diffs"
            exit 1
          fi
  check-licenses:
    if: always()
    needs:
      - build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - id: setup-haskell-cabal
        uses: haskell-actions/setup@v2
        with:
          cabal-version: 3.10.2.1
          ghc-version: 8.10.1
      - run: cabal install cabal-plan -flicense-report
      - name: download Cabal plans
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: plans
          pattern: plan-*
      - run: |
          mkdir -p dist-newstyle/cache
          mv plans/plan-${{ runner.os }}-8.10.1.json dist-newstyle/cache/plan.json
      - name: check if licenses have changed
        run: |
          {
            echo "**NB**: This captures the licenses associated with a particular set of dependency versions. If your own build solves differently, it’s possible that the licenses may have changed, or even that the set of dependencies itself is different. Please make sure you run [\`cabal-plan license-report\`](https://hackage.haskell.org/package/cabal-plan) on your own components rather than assuming this is authoritative."
            echo
            cabal-plan license-report true-name:lib:true-name
          } >"docs/license-report.md"

          git diff --exit-code docs/license-report.md
